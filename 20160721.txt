Pythonモジュールについて

1.heapq

    →   ヒープとは、全ての親ノードの値がその全てのこの値以下であるようなバイナリツールである。
      リストの中身をheappushした後,sortした結果をheappopで返してくれる
        こいつのいいところは、タプルを使って(num,'data')の形でheappushに渡してリストに追
     加することでnumをsortして順番に返してくれるので、番号とひも付けてデータを扱うときには便利
     であると思う

2.bisect

    →   挿入の度にリストをソートすることなく、リストをソートされた順序に保つことをサポートする。
        こいつはheapqと違ってリストの中身をソートするのではなく、あらかじめbisectに関数の定
     義を渡しておき、後からリストを代入することで、そのリストの中身を検索して、定義に当てはめ
     て値を判定することができる。

        例にもあるが、成績（評価）をつけるためにbisectを使うと、最初に評価の目安になる点数を2
     リストで、更に評価（ABCDE、、、）を渡して関数で定義しておき、成績になる点数をリストで渡すと、リ
     ストの順番に値（評価）を返してくれるので、生徒の数が多くても、順にリストに点数を入れていけば
     一気に判定が楽になるという優れもの。

3.fractions

    →   fractionは有理数サポートを提供する。fractionに分数を渡すと小数ではなく分数を（約分
    できるなら約分された形で）、整数を渡すとその数の１０のべき乗で、、、と有理数の形で渡してくれる！！。

4.hashlib

    →   普通に文字列からハッシュ値を生成してくれるという優れもの。１文字でも違うと全く別の値を返す
    のでパスワードにしたら強力だなあと、、、

5.filcmp

    →   このモジュールではファイル及び、ディレクトリを比較する。
        自分で書いたプログラムが正常に動かない時に、このモジュールを使って、正常に動く同じ動作を
        するファイルと比較して解決できそう。

6.random

    →   このモジュールでは様々な分布を持つ擬似乱数生成器を実装する。ほとんど全てのモジュールは
    基礎となる関数random()に依存する。
        このrandomをつかえば優柔不断でも、決断が早くなると思う（）。

7.datetime

    →   日付や時間データを簡単な方法と複雑な方法の両方で操作するためのクラスを提供している。
        "aware"と"naive"の二種類のオブジェクトがある。それぞれオブジェクトによって機能が違う。
        このモジュールを使えば、壁掛け時計より正確に時間が得られて安心できる：ー）

8.difflib

    →   シーケンスを比較するためのクラスや関数を提供している。これはファイルの差分を計算して、いろい
    ろなフォーマットで出力するために利用できる。前述にもあるとおり自分で問題解決するときに捗りそう：ー）

9.struct

    →   Pythonの値とPython bytesオブジェクトとして表されるCの構造データ都の間の変換を実現する。
    C構造体のレイアウト及びPythonの値との間で行いたい変換をコンパクトに表現する。秘めたる有能感恐る
    べし：ー）

10.hmac

    →   RFC２１０４で記述されているHMACアルゴリズムを実装している。秘密鍵などの生成に使われる。脆弱性を
    減らすためにライブラリには警告文が出ている。パスワードはハッシュ値で作りましょう：ー）